import{_ as i,c as t,o as s,ae as a}from"./chunks/framework.CBTkueSR.js";const c=JSON.parse('{"title":"Contributing to light-di","description":"","frontmatter":{},"headers":[],"relativePath":"contributing.md","filePath":"contributing.md"}'),n={name:"contributing.md"};function o(l,e,r,h,p,d){return s(),t("div",null,[...e[0]||(e[0]=[a(`<h1 id="contributing-to-light-di" tabindex="-1">Contributing to light-di <a class="header-anchor" href="#contributing-to-light-di" aria-label="Permalink to &quot;Contributing to light-di&quot;">​</a></h1><p>Thank you for your interest in contributing to <code>light-di</code>! We welcome and appreciate all contributions, whether they are bug reports, feature requests, or code changes. By participating in this project, you agree to abide by our Code of Conduct.</p><h2 id="how-to-contribute" tabindex="-1">How to Contribute <a class="header-anchor" href="#how-to-contribute" aria-label="Permalink to &quot;How to Contribute&quot;">​</a></h2><p>There are several ways you can contribute:</p><ul><li><strong>Report a Bug</strong>: If you find a bug, please check the existing issues to see if it has already been reported. If not, please open a new issue using the bug report template.</li><li><strong>Suggest a Feature</strong>: Have an idea for a new feature? We&#39;d love to hear it. Please open a new issue using the feature request template to start a discussion.</li><li><strong>Submit a Pull Request</strong>: If you want to contribute code, please follow the process outlined below.</li></ul><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>To get your local development environment set up, please follow these steps:</p><ol><li>Fork the repository on GitHub.</li><li>Clone your forked repository to your local machine.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/your-username/light-di.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> light-di</span></span></code></pre></div><ol start="3"><li>Install dependencies.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="development-workflow" tabindex="-1">Development Workflow <a class="header-anchor" href="#development-workflow" aria-label="Permalink to &quot;Development Workflow&quot;">​</a></h2><h3 id="running-tests" tabindex="-1">Running Tests <a class="header-anchor" href="#running-tests" aria-label="Permalink to &quot;Running Tests&quot;">​</a></h3><p>Before submitting a pull request, make sure all tests pass.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><h3 id="building-the-project" tabindex="-1">Building the Project <a class="header-anchor" href="#building-the-project" aria-label="Permalink to &quot;Building the Project&quot;">​</a></h3><p>To compile the source code and generate the distributable files in the <code>dist/</code> directory, run the build command.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h3 id="linting-and-formatting" tabindex="-1">Linting and Formatting <a class="header-anchor" href="#linting-and-formatting" aria-label="Permalink to &quot;Linting and Formatting&quot;">​</a></h3><p>We use ESLint and Prettier to maintain a consistent code style. Before pushing your changes, please run the following commands to check for errors and automatically format your code.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check for linting errors</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Automatically format the code</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> format</span></span></code></pre></div><h2 id="submitting-a-pull-request" tabindex="-1">Submitting a Pull Request <a class="header-anchor" href="#submitting-a-pull-request" aria-label="Permalink to &quot;Submitting a Pull Request&quot;">​</a></h2><p>Follow these steps to submit a pull request:</p><ol><li>Create a new branch for your changes.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/my-new-feature</span></span></code></pre></div><ol start="2"><li>Make your changes, ensuring you follow the project&#39;s code style and conventions.</li><li>Add tests for your changes. If you are adding a new feature, a new test suite is expected. If you are fixing a bug, a new test that reproduces the bug and then passes after your fix is required.</li><li>Commit your changes with a descriptive commit message.</li><li>Push your branch to your forked repository.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/my-new-feature</span></span></code></pre></div><ol start="6"><li>Open a Pull Request from your branch to the <code>main</code> branch of the original repository. <ul><li>In your PR description, please provide a clear and concise summary of your changes.</li><li>If your PR is related to an existing issue, link to it in the description (e.g., <code>Closes #123</code>).</li></ul></li></ol><p>Thank you for your help in making this project better!</p>`,29)])])}const g=i(n,[["render",o]]);export{c as __pageData,g as default};
